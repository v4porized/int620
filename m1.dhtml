#!/usr/local/bin/perl  
#!/usr/bin/perl
###############################################
# first example using templating, xhtml and css
# Â© ckaduri, 2002-2016
# version 0.9g
#
##############################################
use strict;
use Template;   #step 1
use DBI;
use CGI;
our $templateLib;

# precompile inspection
	  $templateLib='/export/srv/www/main/tt2';

###############################################
# setup constants

################################ 
## Declaration of Variables   ##
################################
my(
    $template,
    $ttObject,
    $cgiObject,
    $sample,
    $vars,
    $title,
    $dbObject,
    @collection,
    $mobile,
    );
my($debug)=0;
$mobile=1;

#########################
# debug                 #
#########################

if($debug){
    }
    
#########################
# Generate Magic Header #
#########################
$cgiObject=CGI->new();

print STDOUT $cgiObject->header(-type=>"text/html",
								-charset=>'utf8');

################################ 
## New Template Object(step 2)##
################################
my %config=(
	INCLUDE_PATH => [ $templateLib ],
    RELATIVE => 0
    );
    
$ttObject = Template->new( \%config );

    if ($mobile) {
        $template = 'm1-mobile.tt2';
    }   
    else {
        $template = 'm1-desktop.tt2';
    }

###################################### 
## Pretend do some work (step 3)	##
######################################

$sample=("Is this really a black art?");
$title=("m1");

# Create dbObject
$dbObject = DBI->connect("dbi:mysql:bible:localhost","web","nouser")
    or die "Can't connect to database: $DBI::errstr\n";

# Select Statement for Sections
my $sqlSectionSelect=qq~ SELECT bsect as section, sectname as name FROM section ORDER by sectorder; ~;

# Prepare Section Object
my $sqlSectionObject = $dbObject->prepare($sqlSectionSelect)
    or die "Error preparing: $DBI::errstr\n";

# Execute Section Object
$sqlSectionObject->execute()
    or die "Couldn't execute query '$sqlSectionObject':$DBI::errstr\n";

# Hard Code All
$collection[0]={section=>'All',name=>'Entire Bible'};

# Fetch and push on @collection
SECTION: while (my $ref=$sqlSectionObject->fetchrow_hashref()){
    push (@collection,$ref);
    }

# Select Statement for Books
my $sqlBookSelect= qq~ SELECT bnum,bname FROM books where bsect = ? ORDER by bnum; ~;

# Prepare Section Object
my $sqlBookObject = $dbObject->prepare($sqlBookSelect);

# Loop through $sectionRef
BOOKS: foreach my $sectionRef (@collection) { 
            my $bsect = $sectionRef->{section}; # Simplifier can use $bsect
            next BOOKS if ($bsect eq 'All');
            #Execute Select binding $bsect
            $sqlBookObject->execute($bsect)
                or die "Couldn't execute query '$sqlBookObject':$DBI::errstr\n";
            while (my $ref=$sqlBookObject->fetchrow_hashref()) {
                push (@{ $sectionRef->{books} }, $ref);
             #$bnumCheck[ $ref->{'bnum'} ] = 1; m2
            }
       }

# Disconnect from DB
$dbObject->disconnect();

###################################### 
## Prep vars for template (step 4a) ##
######################################

$vars = {
        collection => \@collection,
        title => $title
        };

###################################### 
## Bind and pass flow (step 4b + 5) ##
######################################

$ttObject->process ( $template, $vars ) 
	or die( $ttObject->error() );
#die in development, production "or send to some error page"
   
######################################

__END__



